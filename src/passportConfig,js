const LocalStrategy = require('passport-local').Strategy
const API_URL = process.env.API_URL

const { fromAPI } = require('./util.js')

const bcrypt = require('bcrypt')

async function configPassport(passport) {
    const authenticate = async (email, password, done) => {
        const user = await fromAPI(`/login/${email}`)

        if (!user) {
            return done(null, false, { message: "User not found." })
        }

        console.log(password)

        try {
            if (await bcrypt.compare(password, user.password)) {
                return done(null, user)
            } else {
                return done(null, false, { message: "Invalid password." })
            }
        } catch(err) {
                return done(err)
        }
         
    }

    passport.use(new LocalStrategy({ usernameField:'email'}, authenticate))
    passport.serializeUser((user, done) => done(null, user.id))

    passport.deserializeUser((id, done) => {
        done(null, fromAPI(`/accounts/${id}`))
    })
}

module.exports = { configPassport }